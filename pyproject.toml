[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "titanic-ml"
version = "0.2.0"
description = "Professional, SOLID, testable ML pipeline for Titanic Kaggle competition"
authors = [{ name = "ML Engineer", email = "noreply@example.com" }]
requires-python = ">=3.11"
dependencies = [
  "click>=8.1.0",
  "pandas>=2.0",
  "numpy>=1.26",
  "scikit-learn>=1.3",
  "pydantic>=2.5",
  "PyYAML>=6.0",
  "joblib>=1.3",
]

[project.optional-dependencies]
boosting = [
  "lightgbm>=4.3",
  "xgboost>=2.0",
  "catboost>=1.2"
]
validation = [
  "pandera>=0.17"
]
kaggle = [
  "kaggle>=1.5"
]
dev = [
  "pytest>=7.4",
  "pytest-cov>=4.1",
  "black>=23.7",
  "ruff>=0.0.280",
  "mypy>=1.5",
  "pre-commit>=3.3"
]
all = [
  "titanic-ml[boosting,validation,kaggle,dev]"
]

[project.scripts]
pipeline = "titanic_ml.cli:cli"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

# Tool configurations
[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.isort]
known-first-party = ["titanic_ml"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "kaggle.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "lightgbm.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "xgboost.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "catboost.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pandera.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "--cov=titanic_ml --cov-report=html --cov-report=term-missing --cov-fail-under=80"
